plugins {
    id 'java'
//    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.springframework.boot' version '2.6.7'
//    id 'io.spring.dependency-management' version '1.0.11'
    id 'groovy'
}

group = 'io.laaf'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // spock 강좌에서 사용한 버전
    testImplementation('org.spockframework:spock-core:2.1-groovy-3.0')
    testImplementation('org.spockframework:spock-spring:2.1-groovy-3.0')

    // spock 최신 버전
//    testImplementation 'org.spockframework:spock-core:2.4-M1-groovy-4.0'
//    testImplementation 'org.spockframework:spock-spring:2.4-M1-groovy-4.0'

    // 런타임에 클래스 기반 spock mock 을 만들기 위해서 필요
    testImplementation 'net.bytebuddy:byte-buddy:1.12.21'

    // testContainers
    testImplementation 'org.testcontainers:spock:1.17.1'
    testImplementation 'org.testcontainers:mariadb:1.17.1'
//    testImplementation 'org.testcontainers:spock:1.17.6'
//    testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
//    testImplementation 'org.testcontainers:mariadb:1.17.6'
}

tasks.named('test') {
    useJUnitPlatform()
}


bootJar {
    archiveFileName = 'app.jar'
}